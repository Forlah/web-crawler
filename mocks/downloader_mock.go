// Code generated by MockGen. DO NOT EDIT.
// Source: downloader.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDownloaderClient is a mock of DownloaderClient interface.
type MockDownloaderClient struct {
	ctrl     *gomock.Controller
	recorder *MockDownloaderClientMockRecorder
}

// MockDownloaderClientMockRecorder is the mock recorder for MockDownloaderClient.
type MockDownloaderClientMockRecorder struct {
	mock *MockDownloaderClient
}

// NewMockDownloaderClient creates a new mock instance.
func NewMockDownloaderClient(ctrl *gomock.Controller) *MockDownloaderClient {
	mock := &MockDownloaderClient{ctrl: ctrl}
	mock.recorder = &MockDownloaderClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDownloaderClient) EXPECT() *MockDownloaderClientMockRecorder {
	return m.recorder
}

// DownloadURL mocks base method.
func (m *MockDownloaderClient) DownloadURL(url string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadURL", url)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadURL indicates an expected call of DownloadURL.
func (mr *MockDownloaderClientMockRecorder) DownloadURL(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadURL", reflect.TypeOf((*MockDownloaderClient)(nil).DownloadURL), url)
}

// WriteContent mocks base method.
func (m *MockDownloaderClient) WriteContent(filepath string, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteContent", filepath, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteContent indicates an expected call of WriteContent.
func (mr *MockDownloaderClientMockRecorder) WriteContent(filepath, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteContent", reflect.TypeOf((*MockDownloaderClient)(nil).WriteContent), filepath, data)
}
